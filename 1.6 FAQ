# FAQ

## 介绍

### Stencil 是什么？

Stencil 是一个以开发者为中心的工具链，用于构建可重用，可扩展的的组件库、应用程序和设计系统。它提供了一个可以生成高度优化 Web Components 组件的编译器。将流行框架的最佳概念结合到一个简单的构建时工具中。

Stencil 专注于使用 Web 标准构建组件，被全世界的开发者和组织使用，是 [100% 免费和 MIT 开源的](https://github.com/ionic-team/stencil/blob/master/LICENSE.md)。

### Stencil 做什么？

Stencil 帮助开发者和开发团队构建并共享自定义组件。由于 Stencil 生成符合标准的 Web Components 组件，使用 Stencil 构建的组件可以与许多流行框架一起使用，甚至不需要框架也可以使用，因为这些组件是标准的 Web Components 组件。
Stencil 还在 Web Components 组件之上启用了许多关键功能，特别是预渲染和对象作为属性（不仅仅是字符串）。

### Stencil 适用于什么？

Stencil 服务于希望构建跨团队，跨框架，跨大型组织共享的自定义组件库和设计系统的开发者和开发团队。设计师也可以使用 Stencil 将他们的原始设计理念始终如一的、高保真的传递给所有用户。

### 谁创造了Stencil？

Stencil 是由 [Ionic core Team](https://ionicframework.com/) 发起的一个开源项目，还有来自社区的贡献。

### Stencil是什么原因被创建的？

Stencil 被 Ionic 框架团队创建，旨在使我们自己的组件库更快、更小以及和所有主流框架兼容。Web Components 通过将更多工作推送给浏览器以获得更好的性能提供了一种解决方案，并且针对所有框架都可以使用

### 谁使用Stencil？

Stencil 最初是为 Ionic 框架开发的，现在 Stencil 已经成为一个很成功的基于 Web Components 的设计系统/ UI 框架。Web Components 现在已经出现在数以千计的应用中，并且每年有接近 4 百万新 Ionic 框架项目被创建。

### Stencil 与传统框架相比如何？

Web Components 生态圈有各种各样的参与者，每个人对于 Web Components 可以做什么，应该做什么都有不同的长期愿景。

有人认为 Web Components 应该取代第三方应用框架，而另一些人则认为 Web Components 更适用于叶子节点、样式节点、设计节点，并且不应该参与到应用组件系统的业务中来。有许多框架开发者不明白 Web Components 的意义，认为是前端创新的侮辱。

对于 Stencil，我们的愿景介于两者之间。从长远来说，我们看到应用开发团队将继续使用他们所选择的框架。我们预想这些框架会变得更好、更小、更高效，对定位和使用 Web Components 提供越来越好的支持。随着公司继续将 Web Components 用于共享设计系统，大型团队将使用越来越多的 组件。

同时，我们坚信 Web Components 是解决组件分布和设计系统问题不可获取的功能。然而我们也认为 90% 的市场一开始就没有这些问题，所以当前讨论 Web Components 的优缺点有些徒劳。

### 为什么 Stencil 被认为与框架无关？

或许 Web Components 最吸引人的优点让开发团队可以灵活的选择基本工具和开发框架，以及开发框架的版本和和喜欢的开发工具。如前所述，实现一个通用设计系统最大的挑战之一是让所有开发团队仅在一组技术上进行标准化。有了 Web Components 每个团队可以使用最适合他们的工具，让他们可以自由的使用他们现在和将来喜欢的工具。

## Stencil 提供了什么

### Stencil 有组件库吗？




## 技术

## 性能

## Stencil 项目

### 从哪里获得支持

### 如何参与项目

### Stencil 是开源吗？

### Stencil 项目使用的哪一个开源证书？

### 谁在研究 Stencil 项目
